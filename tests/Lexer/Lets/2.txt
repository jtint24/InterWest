lexer
let a = let b = let c = let d = 3
let a = 123456 + "wowee"

EXPECTED_RESULT:
{ lexeme = `let` tokenType = let lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `a` tokenType = identifier lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `=` tokenType = = lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `let` tokenType = let lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `b` tokenType = identifier lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `=` tokenType = = lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `let` tokenType = let lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `c` tokenType = identifier lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `=` tokenType = = lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `let` tokenType = let lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `d` tokenType = identifier lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `=` tokenType = = lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `3` tokenType = int lineNumber = 1 }{ lexeme = `\n` tokenType = whitespace lineNumber = 1 }{ lexeme = `let` tokenType = let lineNumber = 2 }{ lexeme = ` ` tokenType = whitespace lineNumber = 2 }{ lexeme = `a` tokenType = identifier lineNumber = 2 }{ lexeme = ` ` tokenType = whitespace lineNumber = 2 }{ lexeme = `=` tokenType = = lineNumber = 2 }{ lexeme = ` ` tokenType = whitespace lineNumber = 2 }{ lexeme = `123456` tokenType = int lineNumber = 2 }{ lexeme = ` ` tokenType = whitespace lineNumber = 2 }{ lexeme = `+` tokenType = plus lineNumber = 2 }{ lexeme = ` ` tokenType = whitespace lineNumber = 2 }{ lexeme = `"wowee"` tokenType = String lineNumber = 2 }{ lexeme = `\n\n` tokenType = whitespace lineNumber = 2 }