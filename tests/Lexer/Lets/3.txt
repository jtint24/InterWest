lexer
let a = return b
let hawojfoawejanweovjnaowenfaweovawlknefawefjaowefiuahwefouhawief = let
blet 7let let

EXPECTED_RESULT:
{ lexeme = `let` tokenType = let lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `a` tokenType = identifier lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `=` tokenType = = lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `return` tokenType = return lineNumber = 1 }{ lexeme = ` ` tokenType = whitespace lineNumber = 1 }{ lexeme = `b` tokenType = identifier lineNumber = 1 }{ lexeme = `\n` tokenType = whitespace lineNumber = 1 }{ lexeme = `let` tokenType = let lineNumber = 2 }{ lexeme = ` ` tokenType = whitespace lineNumber = 2 }{ lexeme = `hawojfoawejanweovjnaowenfaweovawlknefawefjaowefiuahwefouhawief` tokenType = identifier lineNumber = 2 }{ lexeme = ` ` tokenType = whitespace lineNumber = 2 }{ lexeme = `=` tokenType = = lineNumber = 2 }{ lexeme = ` ` tokenType = whitespace lineNumber = 2 }{ lexeme = `let` tokenType = let lineNumber = 2 }{ lexeme = `\n` tokenType = whitespace lineNumber = 2 }{ lexeme = `blet` tokenType = identifier lineNumber = 3 }{ lexeme = ` ` tokenType = whitespace lineNumber = 3 }{ lexeme = `7` tokenType = int lineNumber = 3 }{ lexeme = `let` tokenType = let lineNumber = 3 }{ lexeme = ` ` tokenType = whitespace lineNumber = 3 }{ lexeme = `let` tokenType = let lineNumber = 3 }{ lexeme = `\n\n` tokenType = whitespace lineNumber = 3 }