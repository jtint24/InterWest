parser
if {Bool b -> b}(true) {
    print({Int c -> c+2}(4))
}

EXPECTED_RESULT:
| TreeKind(file)
|	| TreeKind(full expression)
|	|	| TreeKind(delimited expression)
|	|	|	| TreeKind(if statement)
|	|	|	|	| { lexeme = `if` tokenType = if lineNumber = 1 }
|	|	|	|	| { lexeme = ` ` tokenType = whitespace lineNumber = 1 }
|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	| TreeKind(expression call)
|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	| TreeKind(lambda)
|	|	|	|	|	|	|	|	| { lexeme = `{` tokenType = { lineNumber = 1 }
|	|	|	|	|	|	|	|	| TreeKind(parameter list)
|	|	|	|	|	|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `Bool` tokenType = identifier lineNumber = 1 }
|	|	|	|	|	|	|	|	|	|	|	| { lexeme = ` ` tokenType = whitespace lineNumber = 1 }
|	|	|	|	|	|	|	|	|	| { lexeme = `b` tokenType = identifier lineNumber = 1 }
|	|	|	|	|	|	|	|	| { lexeme = ` ` tokenType = whitespace lineNumber = 1 }
|	|	|	|	|	|	|	|	| { lexeme = `->` tokenType = -> lineNumber = 1 }
|	|	|	|	|	|	|	|	| { lexeme = ` ` tokenType = whitespace lineNumber = 1 }
|	|	|	|	|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	|	|	|	| { lexeme = `b` tokenType = identifier lineNumber = 1 }
|	|	|	|	|	|	|	|	| { lexeme = `}` tokenType = } lineNumber = 1 }
|	|	|	|	|	|	| { lexeme = `(` tokenType = ( lineNumber = 1 }
|	|	|	|	|	|	| TreeKind(argument list)
|	|	|	|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	|	|	| { lexeme = `true` tokenType = identifier lineNumber = 1 }
|	|	|	|	|	|	| { lexeme = `)` tokenType = ) lineNumber = 1 }
|	|	|	|	| { lexeme = ` ` tokenType = whitespace lineNumber = 1 }
|	|	|	|	| { lexeme = `{` tokenType = { lineNumber = 1 }
|	|	|	|	| { lexeme = `\n    ` tokenType = whitespace lineNumber = 1 }
|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	| TreeKind(expression call)
|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	| { lexeme = `print` tokenType = identifier lineNumber = 2 }
|	|	|	|	|	|	| { lexeme = `(` tokenType = ( lineNumber = 2 }
|	|	|	|	|	|	| TreeKind(argument list)
|	|	|	|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	|	|	|	| TreeKind(expression call)
|	|	|	|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	|	|	|	| TreeKind(lambda)
|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `{` tokenType = { lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	| TreeKind(parameter list)
|	|	|	|	|	|	|	|	|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	|	|	|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `Int` tokenType = identifier lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	|	|	|	| { lexeme = ` ` tokenType = whitespace lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `c` tokenType = identifier lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	| { lexeme = ` ` tokenType = whitespace lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `->` tokenType = -> lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	| { lexeme = ` ` tokenType = whitespace lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	|	|	|	|	|	|	|	| TreeKind(binary expression)
|	|	|	|	|	|	|	|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `c` tokenType = identifier lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `+` tokenType = plus lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `2` tokenType = int lineNumber = 2 }
|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `}` tokenType = } lineNumber = 2 }
|	|	|	|	|	|	|	|	|	| { lexeme = `(` tokenType = ( lineNumber = 2 }
|	|	|	|	|	|	|	|	|	| TreeKind(argument list)
|	|	|	|	|	|	|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	|	|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	|	|	|	|	|	|	|	|	| { lexeme = `4` tokenType = int lineNumber = 2 }
|	|	|	|	|	|	|	|	|	| { lexeme = `)` tokenType = ) lineNumber = 2 }
|	|	|	|	|	|	| { lexeme = `)` tokenType = ) lineNumber = 2 }
|	|	|	|	| { lexeme = `\n` tokenType = whitespace lineNumber = 2 }
|	|	|	|	| TreeKind(full expression)
|	|	|	|	|	| TreeKind(delimited expression)
|	|	|	|	| { lexeme = `}` tokenType = } lineNumber = 3 }
|	|	|	| { lexeme = `\n\n` tokenType = whitespace lineNumber = 3 }
