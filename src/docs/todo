Things to do:

    - [ ] Bugfixes
        - [ ] Make DFA::unionWith NOT affect the existing DFA
    - [ ] Lexer
        - [ ] Revise identifier definition to be actual (accept a-Z, 0-9 after first char, and _)
        - [x] Make the lexer resilient by skipping over error tokens
        - [x] Give tokens line numbers
    - [ ] Parser
        - [x] Add Pratt parsing / parse binary operators
    - [ ] Main Interface
        - [x] Make an interface that can read in an InterWest file
        - [ ] Add a faux-"compile" option that serializes the AST
    - [ ] IO
        - [ ] Make the InputBuffer actually buffer from a file instead of a String
    - [ ] Interpreter
        - [ ] Validation
            - [ ] Make it so that static values take into account function arguments (like {Int a -> a}(2) knows that a is always 2)
        - [ ] Literals
            - [ ] Allow String literals to be used in expressions
            - [ ] Allow Number/Float literals to be used in expressions
        - [ ] Improve Type System
            - [ ] Allow Type::subtypeOf to handle regular types
                - [x] Build a TriValue logic enum to handle the trivalued logic of this method
                - [x] Handle the trivalue logic wherever this function is used
                - [x] Make a function to check an expression against a type, either by static value or by the expression's type
                - [x] Apply Expression::matchesType to everywhere it can be used
            - [ ] Make the type function/statement work
                - [x] Make a regularity system
                    - [x] Add necessary lexer changes
                    - [x] Change lambda parser definition to allow "regular" prefix
                    - [x] Add regularity enforcement during validation
                    - [x] Add necessary errors
                - [x] Write function definition for "type"
                - [x] Write behavior for static types
                - [ ] Write behavior for dynamic types
        - [ ] Improve Error Messages
            - [x] Add line numbers to error messages
                - [x] Add line numbers to expressions
                - [x] Add line numbers to parse nodes
                - [x] Add line numbers to lexemes
            - [x] Make error messages more descriptive and consistent
                - [x] Add an error message factory/library to put all the error messages in one place
                - [x] Add suggestions to error messages
                - [x] Study what makes a good error message
            - [x] Add highlights to error messages
                - [x] Give parse tree nodes their internal lexemes
                - [x] Give expressions their parse tree nodes
                - [x] Allow errors to be given a lexeme string with some "highlighted"
            - [ ] Assign Errors unique codes
            - [ ] Make Unexpected Token errors print out a SymbolString like other errors
        - [ ] If Statements
            - [ ] Allow ifs to take arbitrary functions instead of pre-deliminated blocks
            - [ ] Add an "else" condition
                - [ ] Change the parse definition of conditionals to allow an else
                - [ ] Change the ExpressionBuilder::buildIfExpression to handle else conditions
                - [ ] Modify ConditionalExpression to handle else (make sure the else code is validated too)
    - [ ] Tests
        - [x] Build testing module
        - [x] Add AST tests for if statements
    - [ ] Minor fixes
        - [x] Change all methods that return/accept subclasses of Collection to return as general a subclass as possible (ie. ArrayList<> -> List<>)
        - [x] Make test interpreter its own thing that inherits from Interpreter, rather than just having it be a boolean value
        - [ ] Make the parser read token-by-token from the lexer, rather than having it require all the lexemes at once
        - [ ] Make a unified interface for functions that can be converted into DFAs (regular ExpressionFunctions and DFAFunctions)
    - [ ] Miscellaneous
        - [ ] Update lambdas to new syntax
        - [ ] Change ErrorManager.Error to ErrorManager.InterWestError or something like that to avoid conflict with java.lang.Error
        - [ ] Change name of Token to TokenType and Symbol to Token, if that's not confusing
        - [x] Decide on a file extension for InterWest (.iw? .west?)
        - [x] Make InterWest logo


